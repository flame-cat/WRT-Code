// RobotBuilder Version: 3.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.subsystems;


import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.PWMSparkMax;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Drivetrain extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private PWMSparkMax leftFrontMotor;
private PWMSparkMax leftRearMotor;
private SpeedControllerGroup leftControllerGroup;
private PWMSparkMax rightFrontMotor;
private PWMSparkMax rightRearMotor;
private SpeedControllerGroup rightControllerGroup;
private DifferentialDrive differentialDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    /**
    *
    */
    public Drivetrain() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
leftFrontMotor = new PWMSparkMax(6);
 addChild("LeftFrontMotor",leftFrontMotor);
 leftFrontMotor.setInverted(false);

leftRearMotor = new PWMSparkMax(8);
 addChild("LeftRearMotor",leftRearMotor);
 leftRearMotor.setInverted(false);

SpeedControllerGroup leftControllerGroup = new SpeedControllerGroup(leftFrontMotor, leftRearMotor  );
 addChild("LeftControllerGroup",leftControllerGroup);
 

rightFrontMotor = new PWMSparkMax(7);
 addChild("RightFrontMotor",rightFrontMotor);
 rightFrontMotor.setInverted(false);

rightRearMotor = new PWMSparkMax(9);
 addChild("RightRearMotor",rightRearMotor);
 rightRearMotor.setInverted(false);

SpeedControllerGroup rightControllerGroup = new SpeedControllerGroup(rightFrontMotor, rightRearMotor  );
 addChild("RightControllerGroup",rightControllerGroup);
 

differentialDrive = new DifferentialDrive(leftControllerGroup, rightControllerGroup);
 addChild("Differential Drive",differentialDrive);
 differentialDrive.setSafetyEnabled(true);
differentialDrive.setExpiration(0.1);
differentialDrive.setMaxOutput(1.0);



    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    
    public DifferentialDrive getDifferentialDrive(){
        return differentialDrive;
    }
}
